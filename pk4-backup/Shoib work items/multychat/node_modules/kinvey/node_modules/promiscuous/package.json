{
  "name": "promiscuous",
  "version": "0.3.0",
  "description": "A minimal and fast promise/deferred implementation",
  "author": {
    "name": "Ruben Verborgh",
    "email": "ruben.verborgh@gmail.com"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/RubenVerborgh/promiscuous.git"
  },
  "bugs": {
    "url": "https://github.com/RubenVerborgh/promiscuous/issues"
  },
  "main": "promiscuous.js",
  "scripts": {
    "test": "promises-aplus-tests test/adapter"
  },
  "devDependencies": {
    "promises-aplus-tests": "*",
    "uglify-js": "2.2.x"
  },
  "readme": "# promiscuous\n<a href=\"http://promises-aplus.github.com/promises-spec\">\n  <img src=\"http://promises-aplus.github.com/promises-spec/assets/logo-small.png\"\n       alt=\"Promises/A+ logo\" title=\"Promises/A+ 1.0 compliant\" align=\"right\" />\n</a>\n\npromiscuous is a JavaScript promise/deferred implementation, implementing the [Promises/A+ spec](http://promises-aplus.github.com/promises-spec/).\n\nIt strives to be **minimal** (0.8kb [minified](https://raw.github.com/RubenVerborgh/promiscuous/dist/promiscuous-node.js) / 0.45kb gzipped) and **fast**.\n\n## Installation and usage\n### Node\nFirst, install promiscuous with npm.\n```bash\n$ npm install promiscuous\n```\n\nThen, include promiscuous in your code file.\n```javascript\nvar promiscuous = require('promiscuous');\n```\n\n### Browsers\nInclude [promiscuous](https://raw.github.com/RubenVerborgh/promiscuous/dist/promiscuous-browser.js) in your HTML file.\n```html\n<script src=\"promicuous-browser.js\"></script>\n```\n\n## API\n### Create a resolved promise\n```javascript\nvar one = promiscuous.resolve(\"one\");\none.then(console.log);\n/* one */\n```\n\n### Create a rejected promise\n```javascript\nvar none = promiscuous.reject(\"error\");\nnone.then(console.log, console.error);\n/* error */\n```\n\n### Write a function that returns a promise\n```javascript\nfunction promiseSomething(something) {\n  var defer = promiscuous.deferred();\n  setTimeout(function () {\n    if (something)\n      defer.resolve(something);\n    else\n      defer.reject(\"nothing\");\n  }, 1000);\n  return defer.promise;\n}\npromiseSomething(\"something\").then(console.log, console.error);\n/* something */\n```\n",
  "readmeFilename": "README.md",
  "_id": "promiscuous@0.3.0",
  "dist": {
    "shasum": "1554be042a765c35fe36f8fc64680c4ca8107566"
  },
  "_from": "promiscuous@~0.3",
  "_resolved": "https://registry.npmjs.org/promiscuous/-/promiscuous-0.3.0.tgz"
}
